import fs from 'node:fs';
import url from 'node:url';
import path from 'node:path';
import glob from 'glob';
import RequireLibrary from './RequireLibrary.js';
export default class FileSystemPathService {
    constructor(_moduleRequireService = new RequireLibrary()) {
        this._moduleRequireService = _moduleRequireService;
    }
    getcwd() {
        const cwd = process.cwd();
        if (typeof cwd === 'undefined') {
            throw new Error('Unable to find current working directory from process');
        }
        return cwd;
    }
    loadFile(path) {
        if (!path) {
            throw new Error('A path is required');
        }
        return this._moduleRequireService.import(path);
    }
    isFile(filepath) {
        return (fs.existsSync(filepath) && fs.lstatSync(filepath).isFile());
    }
    glob(pattern) {
        return glob.sync(pattern);
    }
    ensureAbsolutePath(filepath) {
        if (filepath.startsWith('file://')) {
            return filepath;
        }
        const p = path.isAbsolute(filepath)
            ? path.normalize(filepath)
            : path.resolve(this.getcwd(), filepath);
        return url.pathToFileURL(p).href;
    }
}
