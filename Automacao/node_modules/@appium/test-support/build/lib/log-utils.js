"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.stubLog = stubLog;

require("source-map-support/register");

require("@colors/colors");

class LogStub {
  constructor(opts = {}) {
    this.output = '';
    this.stripColors = Boolean(opts.stripColors);
  }

  log(level, message) {
    if (this.stripColors) {
      message = message.stripColors;
    }

    if (this.output.length > 0) {
      this.output += '\n';
    }

    this.output = `${this.output}${level}: ${message}`;
  }

}

function stubLog(sandbox, log, opts = {}) {
  let logStub = new LogStub(opts);

  for (let l of log.levels) {
    sandbox.stub(log, l).callsFake(function doLogging(mess) {
      logStub.log(l, mess);
    });
  }

  return logStub;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJMb2dTdHViIiwiY29uc3RydWN0b3IiLCJvcHRzIiwib3V0cHV0Iiwic3RyaXBDb2xvcnMiLCJCb29sZWFuIiwibG9nIiwibGV2ZWwiLCJtZXNzYWdlIiwibGVuZ3RoIiwic3R1YkxvZyIsInNhbmRib3giLCJsb2dTdHViIiwibCIsImxldmVscyIsInN0dWIiLCJjYWxsc0Zha2UiLCJkb0xvZ2dpbmciLCJtZXNzIl0sInNvdXJjZXMiOlsiLi4vLi4vbGliL2xvZy11dGlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ0Bjb2xvcnMvY29sb3JzJztcblxuY2xhc3MgTG9nU3R1YiB7XG4gIC8qKlxuICAgKlxuICAgKiBAcGFyYW0ge0xvZ1N0dWJPcHRpb25zfSBbb3B0c11cbiAgICovXG4gIGNvbnN0cnVjdG9yKG9wdHMgPSB7fSkge1xuICAgIHRoaXMub3V0cHV0ID0gJyc7XG4gICAgdGhpcy5zdHJpcENvbG9ycyA9IEJvb2xlYW4ob3B0cy5zdHJpcENvbG9ycyk7XG4gIH1cbiAgLyoqXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBsZXZlbFxuICAgKiBAcGFyYW0ge2FueX0gbWVzc2FnZVxuICAgKi9cbiAgbG9nKGxldmVsLCBtZXNzYWdlKSB7XG4gICAgaWYgKHRoaXMuc3RyaXBDb2xvcnMpIHtcbiAgICAgIG1lc3NhZ2UgPSBtZXNzYWdlLnN0cmlwQ29sb3JzO1xuICAgIH1cbiAgICBpZiAodGhpcy5vdXRwdXQubGVuZ3RoID4gMCkge1xuICAgICAgdGhpcy5vdXRwdXQgKz0gJ1xcbic7XG4gICAgfVxuICAgIHRoaXMub3V0cHV0ID0gYCR7dGhpcy5vdXRwdXR9JHtsZXZlbH06ICR7bWVzc2FnZX1gO1xuICB9XG59XG5cbi8qKlxuICogSW5zdGFudGlhdGVzIGEge0BsaW5rY29kZSBMb2dTdHVifSBvYmplY3RcbiAqIEBwYXJhbSB7aW1wb3J0KCdzaW5vbicpLlNpbm9uU2FuZGJveH0gc2FuZGJveFxuICogQHBhcmFtIHtpbXBvcnQoJ0BhcHBpdW0vdHlwZXMnKS5BcHBpdW1Mb2dnZXJ9IGxvZ1xuICogQHBhcmFtIHtMb2dTdHViT3B0aW9uc30gW29wdHNdXG4gKiBAcmV0dXJucyB7TG9nU3R1Yn1cbiAqL1xuZnVuY3Rpb24gc3R1YkxvZyhzYW5kYm94LCBsb2csIG9wdHMgPSB7fSkge1xuICBsZXQgbG9nU3R1YiA9IG5ldyBMb2dTdHViKG9wdHMpO1xuICBmb3IgKGxldCBsIG9mIGxvZy5sZXZlbHMpIHtcbiAgICBzYW5kYm94LnN0dWIobG9nLCBsKS5jYWxsc0Zha2UoZnVuY3Rpb24gZG9Mb2dnaW5nKG1lc3MpIHtcbiAgICAgIGxvZ1N0dWIubG9nKGwsIG1lc3MpO1xuICAgIH0pO1xuICB9XG4gIHJldHVybiBsb2dTdHViO1xufVxuXG5leHBvcnQge3N0dWJMb2d9O1xuXG4vKipcbiAqIE9wdGlvbnMgZm9yIHtAbGlua2NvZGUgTG9nU3R1Yn0gY29uc3RydWN0b3JcbiAqIEB0eXBlZGVmIExvZ1N0dWJPcHRpb25zXG4gKiBAcHJvcGVydHkge2Jvb2xlYW59IFtzdHJpcENvbG9yc10gLSBJZiBgdHJ1ZWAsIHN0cmlwIEFOU0kgY29sb3JzIGZyb20gb3V0cHV0XG4gKi9cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBRUEsTUFBTUEsT0FBTixDQUFjO0VBS1pDLFdBQVcsQ0FBQ0MsSUFBSSxHQUFHLEVBQVIsRUFBWTtJQUNyQixLQUFLQyxNQUFMLEdBQWMsRUFBZDtJQUNBLEtBQUtDLFdBQUwsR0FBbUJDLE9BQU8sQ0FBQ0gsSUFBSSxDQUFDRSxXQUFOLENBQTFCO0VBQ0Q7O0VBTURFLEdBQUcsQ0FBQ0MsS0FBRCxFQUFRQyxPQUFSLEVBQWlCO0lBQ2xCLElBQUksS0FBS0osV0FBVCxFQUFzQjtNQUNwQkksT0FBTyxHQUFHQSxPQUFPLENBQUNKLFdBQWxCO0lBQ0Q7O0lBQ0QsSUFBSSxLQUFLRCxNQUFMLENBQVlNLE1BQVosR0FBcUIsQ0FBekIsRUFBNEI7TUFDMUIsS0FBS04sTUFBTCxJQUFlLElBQWY7SUFDRDs7SUFDRCxLQUFLQSxNQUFMLEdBQWUsR0FBRSxLQUFLQSxNQUFPLEdBQUVJLEtBQU0sS0FBSUMsT0FBUSxFQUFqRDtFQUNEOztBQXRCVzs7QUFnQ2QsU0FBU0UsT0FBVCxDQUFpQkMsT0FBakIsRUFBMEJMLEdBQTFCLEVBQStCSixJQUFJLEdBQUcsRUFBdEMsRUFBMEM7RUFDeEMsSUFBSVUsT0FBTyxHQUFHLElBQUlaLE9BQUosQ0FBWUUsSUFBWixDQUFkOztFQUNBLEtBQUssSUFBSVcsQ0FBVCxJQUFjUCxHQUFHLENBQUNRLE1BQWxCLEVBQTBCO0lBQ3hCSCxPQUFPLENBQUNJLElBQVIsQ0FBYVQsR0FBYixFQUFrQk8sQ0FBbEIsRUFBcUJHLFNBQXJCLENBQStCLFNBQVNDLFNBQVQsQ0FBbUJDLElBQW5CLEVBQXlCO01BQ3RETixPQUFPLENBQUNOLEdBQVIsQ0FBWU8sQ0FBWixFQUFlSyxJQUFmO0lBQ0QsQ0FGRDtFQUdEOztFQUNELE9BQU9OLE9BQVA7QUFDRCJ9